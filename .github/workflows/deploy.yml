name: Deploy to EC2

on:
  push:
    branches: [main]

env:
  # Docker 관련 설정
  DOCKER_IMAGE_NAME: random-trip-app
  DOCKER_CONTAINER_NAME: random-trip-app-container
  HOST_PORT: 80
  CONTAINER_PORT: 80
  
  # 배포 경로
  APP_PATH: /home/${{ secrets.EC2_USERNAME }}/app
  
  # 제외할 파일/디렉토리 목록 (순서 중요!)
  EXCLUDE_PATTERNS: |
    # 버전 관리 (가장 먼저 제외)
    .git
    .git/
    .git/**/*
    .github
    .github/
    .github/**/*
    .gitignore
    # 의존성
    **/node_modules
    # 테스트 관련
    **/tests
    **/__tests__
    **/*.test.js
    **/*.spec.js
    **/coverage
    # 개발 도구 설정
    **/.editorconfig
    **/.prettierrc
    **/.eslintrc*
    **/jest.config.js
    **/.husky
    # 문서
    **/README.md
    **/LICENSE
    **/docs
    # 기타
    **/*.log

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: CI_CD_KEYS

    steps:
      - uses: actions/checkout@v2

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: ${{ env.APP_PATH }}
          overwrite: true
          exclude: ${{ env.EXCLUDE_PATTERNS }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ${{ env.APP_PATH }}
            
            echo "Current directory contents:"
            ls -la
            
            echo "Package files check:"
            cat package.json
            cat package-lock.json
            
            echo "Building Docker image..."
            docker build -t ${{ env.DOCKER_IMAGE_NAME }} . 2>&1 | tee build.log
            
            if [ $? -ne 0 ]; then
              echo "Build failed. Build logs:"
              cat build.log
              exit 1
            fi