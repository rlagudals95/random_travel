name: Deploy to EC2

on:
  push:
    branches: [main]

env:
  # Docker 관련 환경 변수
  DOCKER_IMAGE_NAME: random-trip-app              # Docker 이미지 이름
  DOCKER_CONTAINER_NAME: random-trip-app-container # Docker 컨테이너 이름
  HOST_PORT: 80                          # 호스트 포트
  CONTAINER_PORT: 80                     # 컨테이너 포트

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: CI_CD_KEYS

    steps:
      - uses: actions/checkout@v2

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "/home/${{ secrets.EC2_USERNAME }}/app"
          overwrite: true

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/${{ secrets.EC2_USERNAME }}/app
            
            # Docker 시스템 정리
            docker system prune -f
            
            # 기존 컨테이너 정리
            docker stop ${{ env.DOCKER_CONTAINER_NAME }} || true
            docker rm ${{ env.DOCKER_CONTAINER_NAME }} || true
            docker rmi ${{ env.DOCKER_IMAGE_NAME }} || true
            
            # 디버깅용 파일 목록 확인
            ls -la
            
            # Docker 이미지 새로 빌드
            docker build -t ${{ env.DOCKER_IMAGE_NAME }} -f Dockerfile .
            
            # 새 컨테이너 실행
            docker run -d \
              --name ${{ env.DOCKER_CONTAINER_NAME }} \
              -p ${{ env.HOST_PORT }}:${{ env.CONTAINER_PORT }} \
              --restart unless-stopped \
              ${{ env.DOCKER_IMAGE_NAME }}